// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.2 (swiftlang-1103.0.32.6 clang-1103.0.32.51)
// swift-module-flags: -target i386-apple-ios8.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ContentInsightTracker
@_exported import ContentInsightTracker
import Foundation
import Swift
import UIKit
import WebKit
public enum ContentIsightsConfig : Swift.Int {
  case toCIServer
  case toLocalHost
  case noOutput
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
public typealias CIConfig = ContentInsightTracker.ContentIsightsConfig
@objc @_hasMissingDesignatedInitializers public class ContentInsights : ObjectiveC.NSObject {
  public var sdkVersion: Swift.String
  public static func shared(config: ContentInsightTracker.CIConfig? = .toCIServer, domainID: Swift.String, isLog: Swift.Bool? = false) -> ContentInsightTracker.ContentInsights
  public func startTracking(referUrl: Swift.String, articleURL: Swift.String, postID: Swift.String, contentView: Any)
  public func stopTracking()
  @objc deinit
  @objc override dynamic public init()
}
extension ContentInsightTracker.ContentIsightsConfig : Swift.Equatable {}
extension ContentInsightTracker.ContentIsightsConfig : Swift.Hashable {}
extension ContentInsightTracker.ContentIsightsConfig : Swift.RawRepresentable {}
